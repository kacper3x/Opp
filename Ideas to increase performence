1. "ERROR -    1: page already has text! – aborting (use --force-ocr to force OCR)
You ran ocrmypdf on a file that already contains printable text or a hidden OCR text layer (it can’t quite tell the difference). You probably don’t want to do this, because the file is already searchable.

As the error message suggests, your options are:

ocrmypdf --force-ocr to rasterize all vector content and run OCR on the images. This is useful if a previous OCR program failed, or if the document contains a text watermark.

ocrmypdf --skip-text to skip OCR and other processing on any pages that contain text. Text pages will be copied into the output PDF without modification.

ocrmypdf --redo-ocr to scan the file for any existing OCR (non-printing text), remove it, and do OCR again. This is one way to take advantage of improvements in OCR accuracy. Printable vector text is excluded from OCR, so this can be used on files that contain a mix of digital and scanned files."
(from https://ocrmypdf.readthedocs.io/en/latest/errors.html#page-already-has-text)

We can try redo_ocr=True instead of force_ocr, and check if there is a change in the speed (currently OCR takes 2 seconds per page, whole process is around 30 seconds for a file)
I do not think that likely, but we may try/

2. Multithreadding.
What is that? I do not know how to do that, but it is famous. 
What I could do is 4 things at once:
-> download the files, and keep downloading them with Selenium
-> (wait 1 minute from the start) start processing the files with ocrmypdf
-> (wait 2 minutes from the start) open readable file and get the data that you want stored in the new file. Hm, perhaps there is a possibility to do SQL code here. Would we like to use database? Would me like this file to have a nice structure since it will be HUGE, or perhaps just use dictonary in Pyhon

After all is done, just wait, enjoy your rest.
You feel rested enough, taken care of? Now you can work on data visualisation with Django and Bootstrap 5 to put it in the Web, so people can have fun with it
